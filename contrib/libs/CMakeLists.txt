add_subdirectory(backward)
add_subdirectory(benchmark)
add_subdirectory(glm)
add_subdirectory(libenet)
add_subdirectory(lua54)
add_subdirectory(flatbuffers)
add_subdirectory(gtest)
set(SDL_CMAKE_DEBUG_POSTFIX "" CACHE STRING "Name suffix for debug builds")
set(SDL2_DISABLE_INSTALL ON)
set(SDL2_DISABLE_UNINSTALL ON)
find_package(PkgConfig)
if (PkgConfig_FOUND)
	pkg_check_modules(SDL2 sdl2)
	if (SDL2_FOUND)
		message(STATUS "SDL system wide installation found")
	endif()
else()
	message(WARN "Pkg-config not found")
endif()
if (NOT SDL2_FOUND)
	find_package(SDL2)
endif()
if (SDL2_FOUND)
	add_library(sdl2 INTERFACE)
	add_library(SDL2_main INTERFACE)
	target_include_directories(sdl2 INTERFACE ${SDL2_INCLUDE_DIRS})
	target_link_libraries(sdl2 INTERFACE ${SDL2_LINK_LIBRARIES})
	add_library(SDL2::SDL2 ALIAS sdl2)
	add_library(SDL2::SDL2main ALIAS SDL2_main)
else()
	add_subdirectory(sdl2)
endif()

add_subdirectory(SDL2_mixer)
add_subdirectory(simplecpp)
add_subdirectory(libuv)
