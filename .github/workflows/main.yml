name: Build

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
    branches:
      - master

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    mac:
        timeout-minutes: 60
        runs-on: macos-latest
        steps:
        - uses: actions/checkout@v3

        - name: Setup
          run: brew install sdl2 python glslang ninja ccache

        - name: ccache
          uses: actions/cache@v3
          with:
            path: |
              ~/.ccache
            key: ${{ runner.os }}-${{ secrets.CACHE_VERSION }}-build-${{ hashFiles('**/CMakeLists.txt') }}
            restore-keys: ${{ runner.os }}-${{ secrets.CACHE_VERSION }}-build-${{ hashFiles('**/CMakeLists.txt') }}

        - name: Build
          run: |
            mkdir build
            cd build
            cmake .. -GNinja
            cmake --build .

        - name: Test
          run: |
            cd build
            ctest -V .

        - name: Package
          run: |
            cd build
            cmake --build . --target package

        - name: Upload the build artifacts
          uses: actions/upload-artifact@v3
          with:
            name: dmg
            path: build/*.dmg

    packages:
        timeout-minutes: 45
        if: github.repository == 'mgerhardy/vengi'
        runs-on: ubuntu-22.04
        steps:
        - uses: actions/checkout@v3

        - name: Setup
          run: |
            sudo apt-get update
            sudo apt-get install cmake debhelper devscripts build-essential lintian liblua5.4-dev libsdl2-dev opencl-c-headers wayland-protocols pkg-config python3 ccache

        - name: ccache
          uses: actions/cache@v3
          with:
            path: |
              ~/.ccache
            key: ${{ runner.os }}-${{ secrets.CACHE_VERSION }}-build-${{ hashFiles('**/CMakeLists.txt') }}
            restore-keys: ${{ runner.os }}-${{ secrets.CACHE_VERSION }}-build-${{ hashFiles('**/CMakeLists.txt') }}

        - name: Ubuntu
          run: |
            debuild -b -ui -uc -us
            mv ../*.deb .

        - name: Upload the ubuntu artifacts
          uses: actions/upload-artifact@v3
          with:
            name: debian
            path: vengi*.deb

        - name: Upload the ubuntu release artifacts
          if: startsWith(github.ref, 'refs/tags/')
          uses: Roang-zero1/github-upload-release-artifacts-action@master
          with:
            args: vengi*.deb
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    linux:
        timeout-minutes: 60
        runs-on: ubuntu-22.04

        steps:
        - uses: actions/checkout@v3

        - name: Setup
          run: |
            sudo apt-get update
            sudo apt-get install liblua5.4-dev libsdl2-dev opencl-c-headers wayland-protocols pkg-config ninja-build python3 ccache

        - name: ccache
          uses: actions/cache@v3
          with:
            path: |
              ~/.ccache
            key: ${{ runner.os }}-${{ secrets.CACHE_VERSION }}-build-${{ hashFiles('**/CMakeLists.txt') }}
            restore-keys: ${{ runner.os }}-${{ secrets.CACHE_VERSION }}-build-${{ hashFiles('**/CMakeLists.txt') }}

        - name: Linux
          run: |
            mkdir build
            cd build
            cmake .. -GNinja -DCMAKE_BUILD_TYPE=Release
            cmake --build .

        - name: Test
          run: |
            cd build
            ctest -V .

    windows:
        timeout-minutes: 45
        runs-on: windows-2022

        steps:
        - uses: actions/checkout@v3

        - name: Build
          run: |
            mkdir build
            cd build
            cmake .. -DCMAKE_BUILD_TYPE=Release
            cmake --build .

        - name: Test
          run: |
            cd build
            ctest -V .

        - name: Install
          run: |
            cd build
            cmake --install . --component voxedit --prefix voxedit-install
            cmake --install . --component voxconvert --prefix voxconvert-install

        - name: Upload the voxedit artifacts
          uses: actions/upload-artifact@v3
          with:
            name: voxedit
            path: build/voxedit-install/

        - name: Upload the voxconvert artifacts
          uses: actions/upload-artifact@v3
          with:
            name: voxconvert
            path: build/voxconvert-install/
